===Butler===
    // ----INTRO ---- 
    {not butler_met:
        The Butler stands with his back against the white walls of the foyer, making an imposing figure. I had nearly mistaken him for a statue until we briefly made eye contact. The gray bristles of his moustache appear to stick straight down, as if recently combed by a careful hand. 
            ~ butler_met = true
    - else: 
        The Butler. Ugh... 
    }
    
    
    // -- WHO --
    * [Butler] "Who are you, exactly?"
        {Cake == CakeList.Trail or Cake == CakeList.RaccoonIn: 
        "Hoh hoh. Is it not clear? I am the butler of this estate. I thought it would be apparent to a pretend detective such as yourself."
        - else: 
         "The evening has nearly concluded and yet you still remain ignorant as to my identity? And you fancy yourself a private investigator?"
        }
        The Butler stares down at me, sharpening a chef's knife that I assume originated from the kitchen. I have a difficult time assessing whether he is annoyed with me or simply tired of the whole ordeal. 
        Whatever he is, he's wasting my time. I need to get down to business. 
            ** [Name] "Haven't heard your name yet. Care to enlighten me?"
                "I do not know why you insist upon asking questions in such a manner... But I will humor you. I am Bartholomew Murderman.
                ...Aha. Of course, that last bit was a jest, detective. I digress. Most people simply refer to me as 'The Butler.' You may do the same." 
            ~ butler_who = true 
            +++ -> Butler
    
    
    // -- HOST -- 
    * {butler_who} [Host] "So, uh, how well acquainted are you with Maximilian?"
        "You're joking, yes? I am his butler, or have you already forgotten?"
            ** [Party] "Do you know why Maximilian has prepared this gathering?" 
            "Is it not obvious? He truly loves his dear friend... Kidding, of course. If you are so very interested in the truth, I might allow you to hear some of it. 
            Sir Maximilian has become quite the paranoiac, seeing ghosts in his halls... But you shouldn't put so much stock in rumors, right, Detective? Why, after all, would you trust the butler?"
            ~ butler_host = true 
                {BPlot == BPlotList.None and butler_host and butler_who:
                    ***  [Haunting] "Max thinks his house is haunted?" 
                        "That is one way of putting it... Hm? What is that behind you, detective? You haven't done anything to rouse the ire of a spirit, now have you?
                        ...But, oh, you needn't worry on that. He'll be holding a seance later this evening, he's trying to cleanse the place. Ask someone else about it. I am weary of the subject." 
                        <i>If Max was having problems... why didn't he tell me about it?</i>
                        ~ BPlot = BPlotList.Seance 
                        ++++ -> Butler 
                - else:
                    ***  [Seance] "So I've heard. What do you think of all this flimflammery? I suppose I've given away my feelings on the subject." 
                    "Oh, I agree. I have cautioned my employer against such endeavors... But who am I to decide on a subject that clamors at one's heart so? If it puts Sir Maximilian's mind at ease, perhaps all this pageantry is worth it." 
                        ++++ -> Butler 
                }
            +++ -> Butler 
    
    
    // -- EXORCIST -- 
    // TODO this could possibly give the player a single variable to reflect that they know the exorterminator has two jobs, but we don't have anything for that right now 
    * {butler_who} [Exorcist] "Tell me what you know about this 'exorcist' character." 
        "To speak candidly, and a touch unkindly, I must say I loathe the man's presence."
        The Butler shudders, the scrape of the knife more and more grating. 
        "I hear he operates as an exterminator as well. Any unwelcome rodents in our home had best be on guard." 
        He pauses, motionless eyes fixed on mine. 
        ++ -> Butler 
    
    
    // -- INTRUDER -- 
    * {RaccoonKnowledge == RaccoonKnowledgeList.OutsideInfluence and butler_who} [Intruder] "I've discovered that someone broke into the mansion. Would you happen to have any information on this?" 
        "Broke in? Under my watchful eye? <i>Hoh!</i> Entirely reasonable. It really wouldn't be so difficult for a mysterious stranger to slip inside and give you a good stab in the back. 
        But, jesting aside... Thank you for informing me. I will look out for any intruders... You know, Sir Maximilian says that I've eyes on the back of my head. Would you like to see?" 
        ~ butler_informed = true 
        ++ -> Butler 
    
    
    // -- CAKE -- 
    // none 
    * {Cake == CakeList.None and butler_who} [Cake] "I heard from my friend that cake will be served."
        "You are correct. 
        ...Were you expecting me to elaborate? Hmph. Very well. The cake has been created in Sir Maximilian's image. You should see it. It's quite... something."
        The Butler's eyes fall down to the knife in his hands, and the corners of his mouth twitch upwards in an odd grin. 
        "I'll need something sharp to cut it with," he says, holding up the knife for me to get a closer look.  
        ++ -> Butler
    // some 
    * {Cake == CakeList.Some and butler_who} [Cake - Crime Scene] "It's a tragedy." 
        "I suppose... Were you expecting some elaboration? Very well. The cake had been created in Sir Maximilian's image. It truly was a sight to behold... And now?
        The Butler's eyes fall to the knife in his hands, and the corners of his mouth twitch upwards in an odd grin. 
        "Why, there is nothing for this little instrument to <i>cut</i> into. And isn't that the real tragedy?" He holds the knife close to my face, allowing me to inspect its detail. He's right; it doesn't look recently used... But the murder didn't look like a clean cut anyway.  
        ++ -> Butler
    // blood 
    * {Cake == CakeList.Blood and butler_who} [Cake - Jelly] "The jelly from the cake is splattered all over." 
        "Oh, I know. A bit of a bloody mess. Let's hope <i>you</i> don't end up like that, hm? Snooping around carries its dangers." 
        ++ -> Butler 
    // trail 
    * {Cake == CakeList.Trail and butler_who} [Cake - Trail] "There's a trail of jelly that leads straight to the kitchen." 
        "You think you've found the trail left by your culprit? Careful... Red jelly is slippery, and the floor of the kitchen is so awfully cold and hard... Ah, and those heavy doors... It's quite possible no one will hear a thing." 
        ** [Question Further] "But you must've seen <i>something</i>. You've been standing in this same spot the whole time. You haven't taken your eyes off of the scene." 
            "That may be so... But have you heard, detective? Every so often, a man must trek to a lavatory to relieve himself. Needs must, and all. I apologize for failing to meet your standards for an adequate sentry." This response is woefully unconvincing, yet completely predictable. 
            +++ -> Butler 
    // raccoon in 
    * {Cake == CakeList.RaccoonIn and butler_who} [Cake - Update] "Haven't seen anything new with our victim." 
        "Really? Just a moment ago, I saw something squirming around in the cake... Why are you looking at me like that? 
        {butler_informed == true: 
            ...Ah, you are suspecting it is our little interloper, are you not? Well, go on. I certainly won't stop you." 
            ~RaccoonKnowledge = RaccoonKnowledgeList.Dunnit
        - else: 
            I'm getting to be quite frail. Whatever it is, I think it best that you deal with it." 
        }
        ++-> Butler

    
    // -- HELLO -- 
    + {butler_who} [Hello] "Just saying hello."
        {butler_hello < 2:
            "Do you truly enjoy my company so much? I'm flattered. But you have better things to do, don't you?"
            ~ butler_hello ++
        - else:
            "I am politely requesting that you cease your inquiries."
            He's looking at that knife again... 
            ~ butler_hello = 0
        }
        ++ -> Butler
    
    
    // -- RETURN -- 
    + [-Return-]
        -> Foyer 
        